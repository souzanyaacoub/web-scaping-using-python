# -*- coding: utf-8 -*-
"""web scaping youtube trending music page.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ksBW2wYMrpwaNjnifqYqO8_iRRn0Ea5G
"""

!pip install webdriver_manager 
!pip -q install -U selenium

!wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
!echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list
!apt update -y 
!apt install -y gconf-service libasound2 libatk1.0-0 libcairo2 libcups2 libfontconfig1 libgdk-pixbuf2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libxss1 fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils
!apt install -y google-chrome-stable

from selenium import webdriver
from bs4 import BeautifulSoup
import pandas as pd
import time
from webdriver_manager.chrome import ChromeDriverManager 
from selenium.webdriver.chrome.service import Service
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
chrome_options.add_argument('--disable-javascript')
chrome_options.add_argument('--lang=en-US') 
s = Service(ChromeDriverManager().install())

# Set up the Chrome driver
driver = webdriver.Chrome(service=s, options=chrome_options)
# Load the YouTube trending page
url='https://www.youtube.com/feed/trending?bp=4gINGgt5dG1hX2NoYXJ0cw%3D%3D'
driver.get(url)
time.sleep(20)

# Extract the HTML content of the page
html = driver.page_source

# Use BeautifulSoup to parse the HTML
soup = BeautifulSoup(html, 'html.parser')

# Extract video details
video_list = soup.find_all('ytd-video-renderer')
data = []
for video in video_list:
    title = video.h3.a.text
   # title = video.find('yt-formatted-string', {'class': 'style-scope ytd-video-renderer'}).text
    print(title)
    channel = video.find('a', {'class': 'yt-simple-endpoint style-scope yt-formatted-string'}).text
    print(channel)
    duration = video.find('span', {'class': 'ytd-thumbnail-overlay-time-status-renderer'}).text
    print(duration)
    views = video.find('span', {'class': 'inline-metadata-item style-scope ytd-video-meta-block'}).text
    print(views)
    try:
        description = video.find('yt-formatted-string', {'class': 'style-scope ytd-video-renderer'}).text
    except:
        description = ''

    data.append({'Title': title, 'Channel': channel, 'Duration': duration, 'views': views, 'Description': description})

# Convert the data to a Pandas DataFrame
df = pd.DataFrame(data)

# Save the DataFrame to an Excel file
df.to_excel('youtube_trending.xlsx', index=False)

# Close the browser window
driver.quit()